<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.5.1" timelimit="10" steplimit="0" memlimit="10000"/>
<prover id="1" name="Z3" version="4.12.2" timelimit="50" steplimit="0" memlimit="10000"/>
<prover id="2" name="CVC4" version="1.8" timelimit="50" steplimit="0" memlimit="10000"/>
<prover id="3" name="CVC5" version="1.0.8" timelimit="50" steplimit="0" memlimit="10000"/>
<prover id="4" name="Eprover" version="2.0" timelimit="50" steplimit="0" memlimit="10000"/>
<prover id="5" name="Coq" version="8.18.0" timelimit="0" steplimit="0" memlimit="0"/>
<prover id="6" name="Alt-Ergo" version="2.5.2" timelimit="50" steplimit="0" memlimit="10000"/>
<prover id="7" name="Alt-Ergo" version="2.4.0" timelimit="50" steplimit="0" memlimit="10000"/>
<file format="whyml">
<path name=".."/><path name="scc.mlw"/>
<theory name="SCCTarjan72">
 <goal name="lmem_dec" proved="true">
 <proof prover="0"><result status="valid" time="0.021601" steps="1"/></proof>
 </goal>
 <goal name="inter_com" proved="true">
 <proof prover="0"><result status="valid" time="0.028130" steps="17"/></proof>
 </goal>
 <goal name="inter_add_l" proved="true">
 <proof prover="0"><result status="valid" time="0.043438" steps="186"/></proof>
 </goal>
 <goal name="inter_not_add_l" proved="true">
 <proof prover="0"><result status="valid" time="0.071530" steps="146"/></proof>
 </goal>
 <goal name="diff_add_l" proved="true">
 <proof prover="0"><result status="valid" time="0.055531" steps="187"/></proof>
 </goal>
 <goal name="diff_not_add_l" proved="true">
 <proof prover="0"><result status="valid" time="0.058910" steps="123"/></proof>
 </goal>
 <goal name="subset_add_r" proved="true">
 <proof prover="0"><result status="valid" time="0.030581" steps="43"/></proof>
 </goal>
 <goal name="union_add_l" proved="true">
 <proof prover="0"><result status="valid" time="0.059837" steps="109"/></proof>
 </goal>
 <goal name="union_add_r" proved="true">
 <proof prover="0"><result status="valid" time="0.037427" steps="77"/></proof>
 </goal>
 <goal name="union_com" proved="true">
 <proof prover="0"><result status="valid" time="0.031726" steps="19"/></proof>
 </goal>
 <goal name="union_var_l" proved="true">
 <proof prover="0"><result status="valid" time="0.068692" steps="114"/></proof>
 </goal>
 <goal name="union_var_r" proved="true">
 <proof prover="0"><result status="valid" time="0.038862" steps="116"/></proof>
 </goal>
 <goal name="set_of_elt" proved="true">
 <proof prover="0"><result status="valid" time="0.124112" steps="375"/></proof>
 </goal>
 <goal name="elt_set_of" proved="true">
 <proof prover="0"><result status="valid" time="0.104716" steps="780"/></proof>
 </goal>
 <goal name="subset_set_of" proved="true">
 <proof prover="1" timelimit="10"><result status="valid" time="0.452001" steps="1640390"/></proof>
 </goal>
 <goal name="elts_cons" proved="true">
 <proof prover="0"><result status="valid" time="0.021474" steps="18"/></proof>
 </goal>
 <goal name="elts_app" proved="true">
 <proof prover="0"><result status="valid" time="0.045300" steps="220"/></proof>
 </goal>
 <goal name="list_simpl_r" proved="true">
 <proof prover="5"><path name="scc_SCCTarjan72_list_simpl_r_1.v"/><result status="valid" time="0.287704"/></proof>
 <transf name="induction_ty_lex" proved="true" >
  <goal name="list_simpl_r.0" proved="true">
  <transf name="split_goal_full" proved="true" >
   <goal name="list_simpl_r.0.0" proved="true">
   <proof prover="6"><result status="valid" time="0.022821" steps="1"/></proof>
   </goal>
   <goal name="list_simpl_r.0.1" proved="true">
   <proof prover="6"><result status="valid" time="0.026836" steps="1"/></proof>
   </goal>
   <goal name="list_simpl_r.0.2" proved="true">
   <proof prover="6"><result status="valid" time="0.018708" steps="1"/></proof>
   </goal>
   <goal name="list_simpl_r.0.3" proved="true">
   <proof prover="6"><result status="valid" time="0.037051" steps="14"/></proof>
   </goal>
   <goal name="list_simpl_r.0.4" proved="true">
   <proof prover="6"><result status="valid" time="0.026452" steps="92"/></proof>
   </goal>
   <goal name="list_simpl_r.0.5" proved="true">
   <proof prover="6"><result status="valid" time="0.024565" steps="4"/></proof>
   </goal>
   <goal name="list_simpl_r.0.6" proved="true">
   <proof prover="6"><result status="valid" time="0.027966" steps="14"/></proof>
   </goal>
   <goal name="list_simpl_r.0.7" proved="true">
   <proof prover="6"><result status="valid" time="0.035896" steps="92"/></proof>
   </goal>
   <goal name="list_simpl_r.0.8" proved="true">
   <proof prover="6"><result status="valid" time="0.016013" steps="4"/></proof>
   </goal>
   <goal name="list_simpl_r.0.9" proved="true">
   <proof prover="6"><result status="valid" time="0.024141" steps="19"/></proof>
   </goal>
   <goal name="list_simpl_r.0.10" proved="true">
   <proof prover="6"><result status="valid" time="0.047207" steps="267"/></proof>
   </goal>
   <goal name="list_simpl_r.0.11" proved="true">
   <proof prover="6"><result status="valid" time="0.015959" steps="6"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="snoc_app" proved="true">
 <proof prover="0"><result status="valid" time="0.043765" steps="208"/></proof>
 </goal>
 <goal name="precedes_mem" proved="true">
 <proof prover="0"><result status="valid" time="0.059349" steps="338"/></proof>
 </goal>
 <goal name="head_precedes" proved="true">
 <proof prover="2" timelimit="10"><result status="valid" time="0.213812" steps="23953"/></proof>
 </goal>
 <goal name="precedes_tail" proved="true">
 <proof prover="2" timelimit="10"><result status="valid" time="2.763041" steps="274155"/></proof>
 </goal>
 <goal name="tail_not_precedes" proved="true">
 <proof prover="0"><result status="valid" time="0.047428" steps="42"/></proof>
 </goal>
 <goal name="split_list_precedes" proved="true">
 <proof prover="0" timelimit="50"><result status="valid" time="13.383701" steps="79728"/></proof>
 </goal>
 <goal name="precedes_refl" proved="true">
 <proof prover="0"><result status="valid" time="0.069290" steps="169"/></proof>
 </goal>
 <goal name="precedes_append_left" proved="true">
 <proof prover="0"><result status="valid" time="0.104163" steps="373"/></proof>
 </goal>
 <goal name="precedes_append_left_iff" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="precedes_append_left_iff.0" proved="true">
  <transf name="split_goal_full" proved="true" >
   <goal name="precedes_append_left_iff.0.0" proved="true">
   <proof prover="7"><result status="valid" time="0.018987" steps="16"/></proof>
   </goal>
   <goal name="precedes_append_left_iff.0.1" proved="true">
   <proof prover="7"><result status="valid" time="0.026359" steps="13"/></proof>
   </goal>
   <goal name="precedes_append_left_iff.0.2" proved="true">
   <proof prover="7"><result status="valid" time="0.032579" steps="83"/></proof>
   </goal>
   <goal name="precedes_append_left_iff.0.3" proved="true">
   <proof prover="7"><result status="valid" time="0.014327" steps="13"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="precedes_append_right" proved="true">
 <proof prover="0"><result status="valid" time="1.003451" steps="4359"/></proof>
 </goal>
 <goal name="precedes_append_right_iff" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="precedes_append_right_iff.0" proved="true">
  <transf name="split_goal_full" proved="true" >
   <goal name="precedes_append_right_iff.0.0" proved="true">
   <proof prover="7"><result status="valid" time="0.029242" steps="17"/></proof>
   </goal>
   <goal name="precedes_append_right_iff.0.1" proved="true">
   <proof prover="7"><result status="valid" time="0.025281" steps="14"/></proof>
   </goal>
   <goal name="precedes_append_right_iff.0.2" proved="true">
   <proof prover="7"><result status="valid" time="0.082876" steps="611"/></proof>
   </goal>
   <goal name="precedes_append_right_iff.0.3" proved="true">
   <proof prover="7"><result status="valid" time="0.016434" steps="12"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="simplelist_tl" proved="true">
 <proof prover="2" timelimit="10"><result status="valid" time="0.289767" steps="34645"/></proof>
 </goal>
 <goal name="simplelist_split" proved="true">
 <proof prover="5"><path name="scc_SCCTarjan72_simplelist_split_2.v"/><result status="unknown" time="0.607403"/></proof>
 <transf name="induction_ty_lex" proved="true" >
  <goal name="simplelist_split.0" proved="true">
  <proof prover="6"><result status="valid" time="0.847640" steps="11031"/></proof>
  <transf name="split_goal_full" proved="true" >
   <goal name="simplelist_split.0.0" proved="true">
   <proof prover="6"><result status="valid" time="0.030494" steps="1"/></proof>
   </goal>
   <goal name="simplelist_split.0.1" proved="true">
   <proof prover="6"><result status="valid" time="0.044628" steps="21"/></proof>
   </goal>
   <goal name="simplelist_split.0.2" proved="true">
   <proof prover="6"><result status="valid" time="0.904803" steps="6993"/></proof>
   </goal>
   <goal name="simplelist_split.0.3" proved="true">
   <proof prover="6"><result status="valid" time="0.904614" steps="6928"/></proof>
   </goal>
   <goal name="simplelist_split.0.4" proved="true">
   <proof prover="6"><result status="valid" time="0.956736" steps="5997"/></proof>
   </goal>
   <goal name="simplelist_split.0.5" proved="true">
   <proof prover="6"><result status="valid" time="0.433696" steps="6112"/></proof>
   </goal>
   <goal name="simplelist_split.0.6" proved="true">
   <proof prover="6"><result status="valid" time="0.041219" steps="305"/></proof>
   </goal>
   <goal name="simplelist_split.0.7" proved="true">
   <proof prover="6"><result status="valid" time="0.021526" steps="118"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="simplelist_app_disjoint" proved="true">
 <proof prover="6"><result status="valid" time="0.681417" steps="2738"/></proof>
 <proof prover="7"><result status="valid" time="0.426900" steps="2773"/></proof>
 </goal>
 <goal name="simplelist_length" proved="true">
 <proof prover="0" timelimit="50" obsolete="true"><result status="timeout" time="50.000000" steps="180338"/></proof>
 <proof prover="1"><result status="timeout" time="50.000000" steps="85943941"/></proof>
 <proof prover="2"><result status="timeout" time="50.000000" steps="5627867"/></proof>
 <proof prover="3"><result status="timeout" time="50.000000" steps="1267971"/></proof>
 <proof prover="4"><result status="timeout" time="50.000000"/></proof>
 <transf name="induction_ty_lex" proved="true" >
  <goal name="simplelist_length.0" proved="true">
  <transf name="split_goal_full" proved="true" >
   <goal name="simplelist_length.0.0" proved="true">
   <proof prover="6"><result status="valid" time="0.046452" steps="80"/></proof>
   <proof prover="7"><result status="valid" time="0.031711" steps="101"/></proof>
   </goal>
   <goal name="simplelist_length.0.1" proved="true">
   <proof prover="6"><result status="valid" time="0.044087" steps="14"/></proof>
   <proof prover="7"><result status="valid" time="0.023377" steps="18"/></proof>
   </goal>
   <goal name="simplelist_length.0.2" proved="true">
   <proof prover="6"><result status="valid" time="0.049239" steps="55"/></proof>
   <proof prover="7"><result status="valid" time="0.026403" steps="64"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="precedes_antisym" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.518888" steps="4645"/></proof>
 <proof prover="6"><result status="valid" time="0.678325" steps="4645"/></proof>
 <proof prover="7"><result status="valid" time="0.468857" steps="4663"/></proof>
 </goal>
 <goal name="precedes_trans" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.186604" steps="1098"/></proof>
 <proof prover="6"><result status="valid" time="0.291783" steps="1103"/></proof>
 <proof prover="7"><result status="valid" time="0.175009" steps="1100"/></proof>
 </goal>
 <goal name="reachable_refl" proved="true">
 <proof prover="0" timelimit="50" obsolete="true"><result status="timeout" time="50.000000" steps="295175"/></proof>
 <proof prover="1"><result status="timeout" time="50.000000" steps="11489861"/></proof>
 <proof prover="2"><result status="timeout" time="50.000000" steps="5453760"/></proof>
 <proof prover="3"><result status="timeout" time="50.000000" steps="998580"/></proof>
 <proof prover="4"><result status="valid" time="0.027508"/></proof>
 <proof prover="6"><result status="timeout" time="50.000000" steps="191838"/></proof>
 <proof prover="7"><result status="timeout" time="50.000000" steps="229729"/></proof>
 </goal>
 <goal name="reachable_trans" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="10.000000" steps="54543"/></proof>
 <proof prover="1" timelimit="10"><result status="timeout" time="10.000000" steps="3858955"/></proof>
 <proof prover="2" timelimit="10"><result status="valid" time="0.162740" steps="20390"/></proof>
 <proof prover="4"><result status="valid" time="0.335505"/></proof>
 <proof prover="6"><result status="timeout" time="50.000000" steps="292786"/></proof>
 <proof prover="7"><result status="timeout" time="50.000000" steps="437077"/></proof>
 </goal>
 <goal name="xpath_xedge" proved="true">
 <proof prover="0" timelimit="50" obsolete="true"><result status="timeout" time="50.000000" steps="464963"/></proof>
 <proof prover="1"><result status="timeout" time="50.000000" steps="9223297"/></proof>
 <proof prover="2"><result status="timeout" time="50.000000" steps="3423904"/></proof>
 <proof prover="3"><result status="timeout" time="50.000000" steps="986049"/></proof>
 <proof prover="4"><result status="timeout" time="50.000000"/></proof>
 <transf name="induction_pr" proved="true" >
  <goal name="xpath_xedge.0" proved="true">
  <proof prover="4"><result status="valid" time="0.085952"/></proof>
  <proof prover="6"><result status="valid" time="0.036213" steps="2"/></proof>
  <proof prover="7"><result status="valid" time="0.027388" steps="8"/></proof>
  </goal>
  <goal name="xpath_xedge.1" proved="true">
  <proof prover="4"><result status="valid" time="0.062013"/></proof>
  <proof prover="6"><result status="timeout" time="50.000000" steps="324731"/></proof>
  <proof prover="7"><result status="timeout" time="50.000000" steps="252826"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="same_scc_refl" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.050095" steps="11"/></proof>
 <proof prover="6"><result status="valid" time="0.044081" steps="11"/></proof>
 <proof prover="7"><result status="valid" time="0.013091" steps="10"/></proof>
 </goal>
 <goal name="same_scc_sym" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.047231" steps="6"/></proof>
 <proof prover="6"><result status="valid" time="0.047359" steps="7"/></proof>
 <proof prover="7"><result status="valid" time="0.025386" steps="5"/></proof>
 </goal>
 <goal name="same_scc_trans" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.048743" steps="24"/></proof>
 <proof prover="6"><result status="valid" time="0.042175" steps="26"/></proof>
 <proof prover="7"><result status="valid" time="0.019463" steps="24"/></proof>
 </goal>
 <goal name="subscc_add" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.105293" steps="265"/></proof>
 <proof prover="6"><result status="valid" time="0.121124" steps="305"/></proof>
 <proof prover="7"><result status="valid" time="0.064438" steps="265"/></proof>
 </goal>
 <goal name="scc_max" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="10.000000" steps="47030"/></proof>
 <proof prover="1" timelimit="10"><result status="timeout" time="10.000000" steps="3263821"/></proof>
 <proof prover="2" timelimit="10"><result status="valid" time="0.279292" steps="39421"/></proof>
 <proof prover="4"><result status="valid" time="3.774027"/></proof>
 <proof prover="6"><result status="timeout" time="50.000000" steps="276697"/></proof>
 <proof prover="7"><result status="timeout" time="50.000000" steps="322576"/></proof>
 </goal>
 <goal name="subscc_after_last_gray" proved="true">
 <proof prover="0" timelimit="50" obsolete="true"><result status="timeout" time="50.000000" steps="322893"/></proof>
 <proof prover="1"><result status="timeout" time="50.000000" steps="129395883"/></proof>
 <proof prover="2"><result status="timeout" time="50.000000" steps="5115340"/></proof>
 <proof prover="3"><result status="timeout" time="50.000000" steps="749606"/></proof>
 <proof prover="4"><result status="timeout" time="50.000000"/></proof>
 <transf name="split_goal_full" proved="true" >
  <goal name="subscc_after_last_gray.0" proved="true">
  <proof prover="6"><result status="valid" time="1.578769" steps="10767"/></proof>
  <proof prover="7"><result status="valid" time="20.189588" steps="168617"/></proof>
  </goal>
  <goal name="subscc_after_last_gray.1" proved="true">
  <proof prover="6"><result status="valid" time="0.092744" steps="107"/></proof>
  <proof prover="7"><result status="valid" time="0.042134" steps="99"/></proof>
  </goal>
  <goal name="subscc_after_last_gray.2" proved="true">
  <proof prover="2"><result status="valid" time="35.536831" steps="2322090"/></proof>
  <proof prover="6"><result status="valid" time="9.542109" steps="41957"/></proof>
  <proof prover="7"><result status="timeout" time="50.000000" steps="347529"/></proof>
  </goal>
  <goal name="subscc_after_last_gray.3" proved="true">
  <proof prover="6"><result status="valid" time="0.540065" steps="2141"/></proof>
  <proof prover="7"><result status="valid" time="0.457474" steps="1790"/></proof>
  </goal>
  <goal name="subscc_after_last_gray.4" proved="true">
  <proof prover="6"><result status="valid" time="0.509270" steps="2116"/></proof>
  <proof prover="7"><result status="valid" time="0.444305" steps="2064"/></proof>
  </goal>
  <goal name="subscc_after_last_gray.5" proved="true">
  <proof prover="7"><result status="timeout" time="50.000000" steps="267000"/></proof>
  <transf name="inline_goal" proved="true" >
   <goal name="subscc_after_last_gray.5.0" proved="true">
   <proof prover="6"><result status="valid" time="19.502696" steps="73430"/></proof>
   <proof prover="7"><result status="valid" time="12.606510" steps="88158"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="wf_color_postcond_split" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.964869" steps="3510"/></proof>
 <proof prover="6"><result status="valid" time="0.840262" steps="3501"/></proof>
 <proof prover="7"><result status="valid" time="0.939463" steps="3509"/></proof>
 </goal>
 <goal name="wf_color_sccs" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="10.000000" steps="39230"/></proof>
 <proof prover="1" timelimit="10"><result status="timeout" time="10.000000" steps="2011347"/></proof>
 <proof prover="2"><result status="valid" time="0.622068" steps="56922"/></proof>
 <proof prover="4"><result status="timeout" time="50.000000"/></proof>
 <proof prover="6"><result status="timeout" time="50.000000" steps="192003"/></proof>
 <proof prover="7"><result status="timeout" time="50.000000" steps="218261"/></proof>
 </goal>
 <goal name="wf_color_3_cases" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="10.000000" steps="43590"/></proof>
 <proof prover="1" timelimit="10"><result status="valid" time="0.174197" steps="262254"/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="4"><undone/></proof>
 <proof prover="6"><result status="timeout" time="50.000000" steps="243526"/></proof>
 <proof prover="7"><undone/></proof>
 </goal>
 <goal name="num_lmem" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="10.000000" steps="30668"/></proof>
 <proof prover="1" timelimit="10"><undone/></proof>
 <proof prover="2" timelimit="10"><undone/></proof>
 <proof prover="6"><result status="valid" time="7.096143" steps="47624"/></proof>
 <proof prover="7"><undone/></proof>
 </goal>
 <goal name="num_rank_strict" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="10.000000" steps="29633"/></proof>
 <proof prover="1" timelimit="10"><undone/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="6"><result status="valid" time="2.608597" steps="23405"/></proof>
 <proof prover="7"><undone/></proof>
 </goal>
 <goal name="simplelist_x_prec_strict_y&#39;" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="1.153178" steps="5226"/></proof>
 <proof prover="6"><result status="valid" time="0.731652" steps="6032"/></proof>
 <proof prover="7"><undone/></proof>
 </goal>
 <goal name="split&#39;vc" expl="VC for split" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="10.000000" steps="58182"/></proof>
 <proof prover="1" timelimit="10"><undone/></proof>
 <proof prover="2" timelimit="10"><undone/></proof>
 <proof prover="6"><result status="valid" time="11.487828" steps="48691"/></proof>
 <proof prover="7"><undone/></proof>
 </goal>
 <goal name="add_stack_incr&#39;vc" expl="VC for add_stack_incr" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.043809" steps="5"/></proof>
 <proof prover="6"><result status="valid" time="0.056980" steps="2"/></proof>
 <proof prover="7"><undone/></proof>
 </goal>
 <goal name="add_black&#39;vc" expl="VC for add_black" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.047120" steps="1"/></proof>
 <proof prover="6"><result status="valid" time="0.045184" steps="1"/></proof>
 <proof prover="7"><undone/></proof>
 </goal>
 <goal name="set_infty&#39;vc" expl="VC for set_infty" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.115653" steps="346"/></proof>
 <proof prover="6"><result status="valid" time="0.136538" steps="336"/></proof>
 <proof prover="7"><undone/></proof>
 </goal>
 <goal name="dfs1&#39;vc" expl="VC for dfs1">
 <proof prover="0" timelimit="50" obsolete="true"><result status="timeout" time="50.000000" steps="222761"/></proof>
 <proof prover="1"><undone/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="3"><undone/></proof>
 <proof prover="4"><undone/></proof>
 <proof prover="5"><path name="scc_SCCTarjan72_dfs1qtvc_1.v"/><undone/></proof>
 <proof prover="6"><undone/></proof>
 <proof prover="7"><undone/></proof>
 <transf name="split_goal_full" >
  <goal name="dfs1&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.545299" steps="2137"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.063136" steps="37"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.2" expl="precondition">
  <proof prover="1"><undone/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="6"><result status="timeout" time="50.000000" steps="169550"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.3" expl="precondition">
  <proof prover="1"><undone/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="6"><result status="timeout" time="50.000000" steps="311803"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.4" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="3.148886" steps="10788"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.5" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="3.321557" steps="13062"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.6" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.890767" steps="2804"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.7" expl="assertion">
  <proof prover="1"><undone/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="6"><result status="timeout" time="50.000000" steps="255305"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.8" expl="assertion">
  <proof prover="1"><undone/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="6"><result status="timeout" time="50.000000" steps="331864"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.9" expl="assertion">
  <proof prover="1"><undone/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="6"><result status="timeout" time="50.000000" steps="392945"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.10" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="26.832784" steps="188274"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.11" expl="postcondition">
  <proof prover="1"><undone/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="6"><result status="timeout" time="50.000000" steps="316804"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.119043" steps="108"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.956544" steps="3309"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.14" expl="postcondition">
  <proof prover="6"><result status="timeout" time="50.000000" steps="292750"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="9.901226" steps="60561"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.16" expl="postcondition">
  <proof prover="1"><undone/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="6"><result status="timeout" time="50.000000" steps="312519"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.063361" steps="301"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="1.025975" steps="3336"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="1"><undone/></proof>
  <proof prover="2"><undone/></proof>
  <proof prover="6"><result status="valid" time="0.057821" steps="70"/></proof>
  </goal>
  <goal name="dfs1&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="7.995590" steps="36257"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="dfs&#39;vc" expl="VC for dfs">
 <proof prover="0" timelimit="50" obsolete="true"><result status="timeout" time="50.000000" steps="268637"/></proof>
 <proof prover="1"><undone/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="3"><undone/></proof>
 <proof prover="4"><undone/></proof>
 <proof prover="6"><result status="timeout" time="50.000000" steps="238095"/></proof>
 <proof prover="7"><undone/></proof>
 </goal>
 <goal name="tarjan&#39;vc" expl="VC for tarjan" proved="true">
 <proof prover="0" timelimit="50" obsolete="true"><result status="timeout" time="50.000000" steps="564758"/></proof>
 <proof prover="1"><undone/></proof>
 <proof prover="2"><undone/></proof>
 <proof prover="3"><undone/></proof>
 <proof prover="4"><undone/></proof>
 <proof prover="6"><result status="valid" time="23.316076" steps="151891"/></proof>
 <proof prover="7"><undone/></proof>
 </goal>
</theory>
</file>
</why3session>
